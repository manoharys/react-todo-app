{"version":3,"sources":["components/Forms.jsx","components/Todo.jsx","components/TodoList.jsx","App.js","reportWebVitals.js","index.js"],"names":["Forms","inputText","setInputText","todos","setTodos","setStatus","type","className","onChange","e","target","value","onClick","preventDefault","text","completed","id","Math","floor","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","filterHandler","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b54748af.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Forms = ({ inputText, setInputText, todos, setTodos, setStatus }) => {\r\n  const inputHandler = (e) => {\r\n    setInputText(e.target.value);\r\n  };\r\n\r\n  const buttonHandler = (e) => {\r\n    e.preventDefault();\r\n    setTodos([\r\n      ...todos,\r\n      {\r\n        text: inputText,\r\n        completed: false,\r\n        id: Math.floor(Math.random() * 1000) + 1,\r\n      },\r\n    ]);\r\n    //clearing the inputField when the is button clicked\r\n    setInputText(\"\");\r\n  };\r\n\r\n  //selectHandler\r\n\r\n  const selectHandler = (e)=>{\r\n      //console.log(e.target.value)\r\n      setStatus(e.target.value)     \r\n}\r\n\r\n  return (\r\n    <form>\r\n      <input\r\n        type=\"text\"\r\n        className=\"todo-input\"\r\n        onChange={inputHandler}\r\n        value={inputText}\r\n      />\r\n      <button onClick={buttonHandler} className=\"todo-button\" type=\"submit\">\r\n        <i className=\"fas fa-plus-square\"></i>\r\n      </button>\r\n      <div className=\"select\">\r\n        <select onClick={selectHandler} name=\"todos\" className=\"filter-todo\">\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Forms;\r\n","import React from \"react\";\r\n\r\nconst Todo = ({ text, todos, setTodos, todo}) => {\r\n  const deleteHandler = () => {\r\n    setTodos(todos.filter((el) => el.id != todo.id));\r\n  };\r\n\r\n  const completeHandler = ()=>{\r\n      setTodos(todos.map((item)=>{\r\n         if(item.id == todo.id){\r\n             return{\r\n                 ...item, completed: !item.completed\r\n             }\r\n         }\r\n         return todo\r\n      }))\r\n  }\r\n  return (\r\n    <div className=\"todo\">\r\n      <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>{text}</li>\r\n      <button onClick={completeHandler} className=\"complete-btn\">\r\n        <i className=\"fas fa-check\"></i>\r\n      </button>\r\n      <button onClick={deleteHandler} className=\"trash-btn\">\r\n        <i className=\"fas fa-trash\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nconst TodoList = ({ todos, setTodos, filteredTodos }) => {\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <ul className=\"todo-list\">\r\n        {filteredTodos.map((todo) => (\r\n          <Todo\r\n            key={todo.id}\r\n            text={todo.text}\r\n            id={todo.id}\r\n            setTodos={setTodos}\r\n            todos={todos}\r\n            todo={todo}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Forms from \"./components/Forms\";\nimport TodoList from \"./components/TodoList\";\n\nfunction App() {\n  //For input texts\n  const [inputText, setInputText] = useState(\"\");\n\n  //For todos to render on UI\n  const [todos, setTodos] = useState([]);\n\n  //For filtering todos on UI\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n \n  //useEffect for filterHandler\n  useEffect(() => {\n    filterHandler();\n   \n  }, [todos, status]);\n\n  //filterHandler\n  const filterHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === true));\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">TODO-APP</header>\n      <Forms\n        inputText={inputText}\n        setInputText={setInputText}\n        todos={todos}\n        setTodos={setTodos}\n        setStatus={setStatus}\n      />\n      <TodoList\n       \n        filteredTodos={filteredTodos}\n        todos={todos}\n        setTodos={setTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}